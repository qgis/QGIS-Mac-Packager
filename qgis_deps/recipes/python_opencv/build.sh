function build_python_opencv() {
  try cd ${DEPS_BUILD_PATH}/python_opencv/build-$ARCH
  push_env

  export CMAKE_ARGS=""
  export CMAKE_ARGS="-DCMAKE_PREFIX_PATH=$STAGE_PATH;$QT_BASE/clang_64"
  export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_MACOSX_RPATH=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_PROTOBUF=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DPROTOBUF_UPDATE_FILES=TRUE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_ZLIB=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_TIFF=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_JPEG=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_PNG=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DBUILD_WEBP=FALSE"
  export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_OSX_DEPLOYMENT_TARGET=$MACOSX_DEPLOYMENT_TARGET"
  export CMAKE_ARGS="${CMAKE_ARGS} -GNinja -DCMAKE_MAKE_PROGRAM=$NINJA"

  export ENABLE_CONTRIB=1
  try $PYTHON setup.py install

  unset ENABLE_CONTRIB
  unset CMAKE_ARGS
  pop_env
}
