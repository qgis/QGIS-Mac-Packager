name: 🍏 Build QGIS
on:
  workflow_dispatch:
  push:
    paths:
    - 'config/**'
    - 'qgis_build/**'
    - '.github/workflows/qgis.yml'
    - 'qgis-mac-packager.bash'

env:
  RELEASE: nightly
  CCACHE_DIR: ${{ github.workspace }}/ccache
  BASE_DIR: ${{ github.workspace }}
  PACKAGER_DIR: ${{ github.workspace }}/packager
  QGIS_SOURCE_DIR: ${{ github.workspace }}/QGIS
  QGIS_BUILD_DIR: ${{ github.workspace }}/build
  QGIS_PRIVATE_SDKS_PATH: ${{ github.workspace }}/qgis-private-sdks
  QGIS_PRIVATE_SDK_VERSION: "0.10"

jobs:
  qgis_build:
    if: github.repository == 'qgis/QGIS-Mac-Packager'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          path: ${{ env.PACKAGER_DIR }}

      - name: Set environment
        run: |
          source ${PACKAGER_DIR}/config/${RELEASE}.conf
          QGIS_DEPS_PATH=/opt/QGIS/qgis-deps-${QGIS_DEPS_VERSION}
          echo "QGIS_DEPS_VERSION=${QGIS_DEPS_VERSION}" >> $GITHUB_ENV
          echo "QGIS_DEPS_PATH=${QGIS_DEPS_PATH}" >> $GITHUB_ENV
          echo "QGIS_DEPS_STAGE_PATH=${QGIS_DEPS_STAGE_PATH}" >> $GITHUB_ENV
          sudo mkdir -p ${QGIS_DEPS_STAGE_PATH}
          
          PARSER=". | map(select(.tag_name | startswith(\"qgis-deps-${QGIS_DEPS_VERSION}\")).tag_name) | max"
          QGIS_DEPS_SDK=$(curl -H "Authorization: token ${{ secrets.GH_PAT }}" -H "Accept: application/vnd.github.v3.raw" -s https://api.github.com/repos/qgis/qgis-Mac-Packager/releases | jq -r "${PARSER}")
          echo "Latest deps release for ${QGIS_DEPS_VERSION}: ${QGIS_DEPS_SDK}"
          echo "QGIS_DEPS_SDK=${QGIS_DEPS_SDK}" >> $GITHUB_ENV

      - name: Download qgis-deps
        run: |
          wget -q https://github.com/qgis/QGIS-Mac-Packager/releases/download/${QGIS_DEPS_SDK}/${QGIS_DEPS_SDK}.tar.gz.partaa
          wget -q https://github.com/qgis/QGIS-Mac-Packager/releases/download/${QGIS_DEPS_SDK}/${QGIS_DEPS_SDK}.tar.gz.partab
          wget -q https://github.com/qgis/QGIS-Mac-Packager/releases/download/${QGIS_DEPS_SDK}/${QGIS_DEPS_SDK}.tar.gz.partac
          cd ${QGIS_DEPS_STAGE_PATH}
          cat ${GITHUB_WORKSPACE}/${QGIS_DEPS_SDK}.tar.gz.part* | sudo tar xzf -
          if [[ -f ${QGIS_DEPS_STAGE_PATH}/qgis-deps-${QGIS_DEPS_VERSION}.conf ]]; then
            DEPS_CONF_FILE=${QGIS_DEPS_STAGE_PATH}/qgis-deps-${QGIS_DEPS_VERSION}.conf
          else
            # TODO: remove
            DEPS_CONF_FILE=${QGIS_DEPS_STAGE_PATH}/deps-${QGIS_DEPS_VERSION}.conf
          fi
          source ${DEPS_CONF_FILE}
          echo "VERSION_QT=${VERSION_QT}" >> $GITHUB_ENV
          echo "QT_BASE=${QT_BASE}" >> $GITHUB_ENV
          ls -l ${QGIS_DEPS_PATH}
          ls -l ${QGIS_DEPS_PATH}/stage

      - name: Fetch QGIS private SDK
        run: |
          FILE="private-sdk.tar.gz"
          PARSER=". | map(select(.tag_name == \"${{ env.QGIS_PRIVATE_SDK_VERSION }}\"))[0].assets | map(select(.name == \"$FILE\"))[0].id"
          ASSET_ID=$(curl -H "Authorization: token ${{ secrets.GH_PAT }}" -H "Accept: application/vnd.github.v3.raw" -s https://api.github.com/repos/qgis/qgis-private-sdks/releases | jq "${PARSER}")
          echo "asset id: ${ASSET_ID}"
          wget -q --auth-no-challenge --header='Accept:application/octet-stream' https://${{ secrets.GH_PAT }}:@api.github.com/repos/qgis/qgis-private-sdks/releases/assets/${ASSET_ID} -O ${FILE}
          mkdir ${{ env.QGIS_PRIVATE_SDKS_PATH }}
          cd ${{ env.QGIS_PRIVATE_SDKS_PATH }}
          tar xzf ../${FILE}

      - name: fetch QGIS
        uses: actions/checkout@v2
        with:
          repository: qgis/QGIS
          path: ${{ env.QGIS_SOURCE_DIR }}

      - name: Prepare build cache for branch/tag
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ env.CCACHE_DIR }}
          # The branch or tag ref that triggered the workflow run. For branches this in the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>
          key: build-mac-ccache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            build-mac-ccache-${{ github.ref }}-
            build-mac-ccache-refs/heads/master-

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          dir: ${{ github.workspace }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: '5.15.2'
          host: 'mac'
          target: 'desktop'

      - name: move Qt to /opt
        run: |
          sudo mv ${{ github.workspace }}/Qt /opt

      - name: install brew deps
        run: ./scripts/install_brew_dev_packages.bash

      - name: Install ccache
        run: |
          mkdir -p ${CCACHE_DIR}
          brew install ccache
          ccache --set-config=max_size=2.0G
          ccache -s

      - name: Run pkg
        run: |
          mkdir ${QGIS_BUILD_DIR}
          
          MAJOR=$(sed -ne 's/[sS][eE][tT](CPACK_PACKAGE_VERSION_MAJOR "\([0-9]*\)")/\1/p' ${QGIS_SOURCE_DIR}/CMakeLists.txt)
          MINOR=$(sed -ne 's/[sS][eE][tT](CPACK_PACKAGE_VERSION_MINOR "\([0-9]*\)")/\1/p' ${QGIS_SOURCE_DIR}/CMakeLists.txt)
          PATCH=$(sed -ne 's/[sS][eE][tT](CPACK_PACKAGE_VERSION_PATCH "\([0-9]*\)")/\1/p' ${QGIS_SOURCE_DIR}/CMakeLists.txt)
          echo "Building QGIS ${RELEASE} version ${MAJOR}.${MINOR}.${PATCH}"
          
          cd ${PACKAGER_DIR}
          sudo -E ./qgis-mac-packager.bash ${RELEASE} ${MAJOR}.${MINOR}.${PATCH} ${RELEASE}.dmg

      - name: debug
        if: failure()
        run: cat ${{ github.workspace }}/build/cmake.configure

